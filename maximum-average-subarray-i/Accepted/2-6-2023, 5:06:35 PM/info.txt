{"id":892936125,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1675721195,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/892936125/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"49.7 MB","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        double maxAverage = Integer.MIN_VALUE;\n        int currentRunningAverage = 0;\n\n        for (int i = 0; i < nums.length; i++) {\n            currentRunningAverage += nums[i];\n            if (i >= k - 1) {\n                double currentAverage = currentRunningAverage / (double)k;\n                maxAverage = Math.max(maxAverage, currentAverage);\n                currentRunningAverage -= nums[i - (k - 1)];\n            }\n        }\n        return maxAverage;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false}