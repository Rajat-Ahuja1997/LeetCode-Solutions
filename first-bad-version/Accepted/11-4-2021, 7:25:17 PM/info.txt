{"id":582192653,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 3 months","timestamp":1636068317,"status":10,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/582192653/","is_pending":"Not Pending","title":"First Bad Version","memory":"38.6 MB","code":"/**\n * Definition for isBadVersion()\n * \n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */\n\n/**\n * @param {function} isBadVersion()\n * @return {function}\n */\nvar solution = function(isBadVersion) {\n    /**\n     * @param {integer} n Total versions\n     * @return {integer} The first bad version\n     */\n    return function(n) {\n        let low = 1;\n        let high = n;\n        while (low < high) {\n            let mid = low + Math.floor((high-low)/2);\n            if (isBadVersion(mid)) {\n                high = mid; \n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    };\n};","compare_result":"1111111111111111111111","title_slug":"first-bad-version","has_notes":false}