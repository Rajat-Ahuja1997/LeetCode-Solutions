{"id":898885439,"lang":"java","lang_name":"Java","time":"5 days, 16 hours","timestamp":1676519063,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/898885439/","is_pending":"Not Pending","title":"Search in a Sorted Array of Unknown Size","memory":"43.1 MB","code":"/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     public int get(int index) {}\n * }\n */\n\nclass Solution {\n    public int search(ArrayReader reader, int target) {\n        // first find the range --> first start with a box of size 2\n        // condition for target to lie in the range is target < end. We don't care about end until we are searching'\n\n        int start = 0;\n        int end = 1;\n        while (reader.get(end) < target) {\n            // our new start is the old end + 1 as the old range wasn't sufficient\n            start = end + 1;\n            // double our box size.\n            end *= 2;\n        }\n        while (start <= end) {\n            int mid = (start + end) / 2;\n            if (target > reader.get(mid)) {\n                start = mid + 1;\n            } else if (target < reader.get(mid)) {\n                end = mid - 1;\n            } else {\n                return mid;\n            }\n        }        \n        return -1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"search-in-a-sorted-array-of-unknown-size","has_notes":false}