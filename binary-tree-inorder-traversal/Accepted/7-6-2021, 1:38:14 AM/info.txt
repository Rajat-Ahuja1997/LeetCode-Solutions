{"id":518093249,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1625549894,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/518093249/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"36.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> inorderTraversal(TreeNode root) {\n        List<Integer> nodes = new ArrayList<>();\n        helper(nodes, root);\n        return nodes;\n    }\n    \n    public void helper(List<Integer> nodes, TreeNode root) {\n        if (root != null) {\n            helper(nodes, root.left);\n            nodes.add(root.val);\n            helper(nodes, root.right);\n        }\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}