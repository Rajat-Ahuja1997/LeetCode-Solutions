{"id":580134079,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 3 months","timestamp":1635717582,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/580134079/","is_pending":"Not Pending","title":"Min Stack","memory":"48.1 MB","code":"\nvar MinStack = function() {\n    this.array = [];\n};\n\n/** \n * @param {number} val\n * @return {void}\n */\nMinStack.prototype.push = function(val) {\n    let min = this.array.length === 0 ? val : Math.min(val, this.array[this.array.length-1].min);\n    this.array.push({\"val\": val, \"min\": min});\n};\n\n/**\n * @return {void}\n */\nMinStack.prototype.pop = function() {\n    return this.array.pop();\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.top = function() {\n    return this.array[this.array.length-1].val;\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.getMin = function() {\n    return this.array[this.array.length-1].min;\n};\n\n/** \n * Your MinStack object will be instantiated and called as such:\n * var obj = new MinStack()\n * obj.push(val)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false}