{"id":898564947,"lang":"java","lang_name":"Java","time":"6 days, 4 hours","timestamp":1676475400,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/898564947/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"59.9 MB","code":"class Solution {\n    public int findDuplicate(int[] nums) {\n        int i = 0;\n        while (i < nums.length) {\n            int correct = nums[i] - 1;\n            if (nums[i] != nums[correct]) {\n                swap(nums, i, correct);\n            } else {\n                if (nums[i] != i + 1) {\n                    return nums[i];\n                } else {\n                    i++;\n                }\n            }\n        }\n        return -1;\n    }\n\n    private void swap(int[] arr, int first, int second) {\n        int temp = arr[second];\n        arr[second] = arr[first];\n        arr[first] = temp;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false}