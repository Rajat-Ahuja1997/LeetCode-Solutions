{"id":892990946,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1675731011,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/892990946/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"51.6 MB","code":"class Solution {\n    public int totalFruit(int[] fruits) {\n        int treeStart = 0;\n        int maxFruit = 0;\n        Map<Integer, Integer> fruitFrequency = new HashMap<>();\n        for (int treeEnd = 0; treeEnd < fruits.length; treeEnd++) {\n            int rightFruit = fruits[treeEnd];\n            fruitFrequency.put(rightFruit, fruitFrequency.getOrDefault(rightFruit, 0) + 1);\n\n            while (fruitFrequency.size() > 2) {\n                int leftFruit = fruits[treeStart];\n                fruitFrequency.put(leftFruit, fruitFrequency.get(leftFruit) - 1);\n                if (fruitFrequency.get(leftFruit) == 0) {\n                    fruitFrequency.remove(leftFruit);\n                }\n                treeStart++;\n            }\n            maxFruit = Math.max(maxFruit, treeEnd - treeStart + 1);\n        }\n        return maxFruit;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fruit-into-baskets","has_notes":false}