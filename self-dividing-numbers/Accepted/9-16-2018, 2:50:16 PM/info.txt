{"id":176423634,"lang":"java","lang_name":"Java","time":"4 years, 5 months","timestamp":1537123816,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/176423634/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"N/A","code":"class Solution {\n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> selfDividing = new ArrayList<Integer>();\n        for(int i = left; i <= right; i++) {\n            if(isSelfDividing(i)) {\n                selfDividing.add(i);\n            }\n        }\n        return selfDividing;\n    }\n        \n    public static boolean isSelfDividing(int n) {\n        int initialN = n;\n        List<Integer> checker = new ArrayList<Integer>();\n        while (n > 0) {\n            int d = n / 10;\n            int r = n % 10;\n            n = d;\n            checker.add(r);\n        }\n        if(checker.contains(0)) {\n            return false;\n        }\n        for(int i = 0; i < checker.size(); i++) {\n            if(initialN % checker.get(i) == 0) {\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers","has_notes":false}