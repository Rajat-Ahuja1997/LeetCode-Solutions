{"id":580349563,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 3 months","timestamp":1635752555,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/580349563/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nvar inorderTraversal = function(root) {\n    let nodes = [];\n    traversal(nodes, root);\n    return nodes;\n};\n\ntraversal = (nodes, root) => {\n    if (root !== null) {\n        traversal(nodes, root.left);\n        nodes.push(root.val);\n        traversal(nodes, root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}