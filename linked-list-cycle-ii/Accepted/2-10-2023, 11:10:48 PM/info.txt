{"id":895701058,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1676088648,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/895701058/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"42.4 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        boolean met = false;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n\n            if (slow == fast) {\n                met = true;\n                break;\n            }\n        }\n        if (!met) {\n            return null;\n        } else {\n            slow = head;\n            while (slow != fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n        }\n        return slow;\n    }\n}","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false}