{"id":897559457,"lang":"java","lang_name":"Java","time":"1Â week","timestamp":1676340771,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/897559457/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"63.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteMiddle(ListNode head) {\n        if (head.next == null) {\n            return null;\n        }\n        ListNode sentinel = new ListNode(0);\n        sentinel.next = head;\n        ListNode slow = sentinel, fast = head;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        slow.next = slow.next.next;\n        return head;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}