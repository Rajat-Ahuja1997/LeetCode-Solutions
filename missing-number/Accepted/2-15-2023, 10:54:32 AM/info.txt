{"id":898575133,"lang":"java","lang_name":"Java","time":"6 days, 4 hours","timestamp":1676476472,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/898575133/","is_pending":"Not Pending","title":"Missing Number","memory":"43 MB","code":"class Solution {\n    public int missingNumber(int[] nums) {\n        int i = 0;\n        while (i < nums.length) {\n            int correct = nums[i];\n            if (nums[i] < nums.length && nums[correct] != nums[i]) {\n                swap(nums, i, correct);\n            } else {\n                i++;\n            }\n        }\n        // search for missing number\n        for (i = 0; i < nums.length; i++) {\n            if (nums[i] != i) {\n                return i;\n            }\n        }\n        return nums.length;\n    }\n\n    private static void swap(int[] arr, int first, int second) {\n        int temp = arr[first];\n        arr[first] = arr[second];\n        arr[second] = temp;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"missing-number","has_notes":false}